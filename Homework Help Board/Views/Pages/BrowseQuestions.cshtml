@model BrowseQuestionsViewModel



<!DOCTYPE HTML>

<form asp-action="BrowseQuestions">

    <div class="form-horizontal">

        <h3>Homework Helper Board | My Homework</h3>
        @*buttons / need foreach loop to populate listgroup *@

        <div class="container">
            <div id="BrowseBtn">

                <div class="form-group">

                    <div class="btn-group btn-group-lg" role="group" aria-label="Basic example">
                        @*ask about the formethod*@
                        <a class="btn btn-secondary" asp-action="BrowseQuestions" asp-route-showquestions="true">Log of Questions</a>

                        @*<button type="submit" class="btn btn-secondary" asp-action="Questions" Formmethod="Get">Log of Questions</button>*@

                        <button input id="repliesButton" type="Submit" class="btn btn-secondary" asp-action="Replies">Log of Answers Posted </button>

                        <button input id ="subButton" type="submit" class="btn btn-secondary" asp-action="Subscribe Threads">Subscribe Threads</button>

                        @*<h4>Select Grade and Subject to Filter by:  </h4>
                        <div class="custom-select" style="width:200px;">
                            <select>
                                <option value="@Model.Subject">Subject</option>
                            </select>
                        </div>

                        <div class="custom-select" style="width:200px;">
                            <select>
                                <option value="@Model.Grade">Grade</option>

                            </select>
                        </div>*@

                    </div>
                </div>
            </div>

            @*List group*@

            <div form-group>
                <div class="container">

                    <div id="BrowseQuestions">
                        @if (Model.ShowQuestions)
                        {
                            for (int i = 0; i < Model.Questions.Count; i++)
                            {
                                <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1">@Model.Questions[i].Question.Title</h5>

                                        <small class="text-muted">@Model.Questions[i].Question.DateCreated</small>
                                    </div> <p class="mb-1">@Model.Questions[i].Question.Body</p>
                                    <small class="text-muted">@Model.Questions[i].Question.Subject</small>
                                    <small class="text-muted">@Model.Questions[i].Question.Grade</small>
                                </a>

                                <div class="custom-select" style="width:200px;">
                                    <select asp-for="Questions[i].Open">
                                        <option value="true">Open Replies</option>
                                        <option value="false">Close Replies</option>
                                    </select>
                                </div>

                                <div class="custom-select" style="width:200px;">
                                    <select asp-for="Questions[i].Subscribe">
                                        <option value="true">Subscribe to Thread</option>
                                        <option value="false">Unsubscribe to Thread</option>
                                    </select>
                                </div>

                                <input type="submit" value="Save Changes" />

                            }
                        }

                        @if (Model.ShowReplies)
                        {
                            foreach (var r in Model.Replies)
                            {
                                <div>@r.Reply.Body</div>
                                <div>@r.Reply.DateCreated</div>
                                <div>@r.Reply.NumDownvotes</div>
                                <div>@r.Reply.NumUpVotes</div>
                                <div>@r.Reply.NumFlags</div>
                                <a id="vote" data-id="@r.Reply.PostID" data-vote="true" class="btn btn-default">Up Vote</a><a data-id="@r.Reply.PostID" id="vote" data-vote="false" class="btn btn-default">Down Vote</a>
                                <div id="pvVotes">Upvotes: @r.Reply.NumUpVotes; Downvotes: @r.Reply.NumDownvotes</div>
                            }
                        }

                        @if (Model.ShowSubscribes)
                        {
                            foreach (var s in Model.User.SubscribedThreads)
                            {

                            }
                        }
                        <div class="list-group">





                            @*<a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@Model.Title</h5>
                    <small class="text-muted">@Model.DateCreated </small>
                </div> <p class="mb-1">@Model.Body</p>
                <small class="text-muted">@Model.Subject</small>
            </a>
            <div class="custom-select" style="width:200px;">
                <select>
                    <option value="Open">Open Replies</option>
                    <option value="Close">Close Replies</option>
                    <option value="Subscribe">Subscribe</option>
                    <option value="Unsubscribe">Unsubscribe to Thread</option>

                </select>
            </div>


            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@Model.Title</h5>
                    <small class="text-muted">@Model.DateCreated</small>
                </div> <p class="mb-1">@Model.Body</p>
                <small class="text-muted">@Model.Subject</small>
                <small class="text-muted">@Model.Grade</small>
            </a>
            <div class="custom-select" style="width:200px;">

                <select>
                    <option value="Open">Open Replies</option>
                    <option value="Close">Close Replies</option>
                    <option value="Subscribe">Subscribe</option>
                    <option value="Unsubscribe">Unsubscribe to Thread</option>

                </select>

            </div>*@

                        </div>


                    </div>

                </div>
            </div>
        </div>





    </div>
</form>

<script>
    $("#vote").click(function () {
        var upvote = $(this).data("vote").val();
        var replyId = $(this).data("id").val();

        var model = $("form").serialize();
        model.ClickedUpvote = upvote;
        model.ClickedReplyID = replyId;

        $.ajax({
            type: 'POST',
            url: '@Url.Action("Vote","Pages")',
            data: model,
            success: function (result) {
                $("#pvVotes").html(result);
            },
            error: function () {
                alert("Could not apply vote at this time.");
            }
        });
    });
</script>